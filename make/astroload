#---do not execute- this code needs to be sourced (normally via an alias)
#
#   A shell variable 'a_version' will be exported to the package startup
#   scripts for those that support multiple versions
#

if ($?astroload == 0) set astroload=()


if ($#argv == 0) then
  echo The following astromake packages have been loaded in this shell with astroload:
  echo $astroload
  goto end
endif


set packages=($*)
set a_version=()

#					loop over all arguments
ploop:
  if ($#packages == 0) goto end

  set package=$packages[1]
  shift packages
  #					give a little bit of help
  if (X$package == X-h) then
    echo "Usage: astroload [-v version_id] package_name(s)"
    goto end
  endif
  #					find -v option to select a version
  if (X$package == X-v) then
    if ($#packages == 0) then
	astromake versions
	goto end
    endif
    set a_version=($packages[1])
    # echo ASTRO VERSION $a_version
    shift packages
    goto ploop
  endif

  #					start package by sourcing startup file
  if (-e $ASTROMAKE/status/$package) then
    if ($?ASTROLOADED == 0) then
      if ($?prompt) echo AstroLoading $package $a_version \(`cat $ASTROMAKE/status/$package`\)
    endif
    source $ASTROMAKE/rc/$package.csh
    if ($?a_version) then
        set astroload=($astroload ${package}_$a_version)
        set a_version=()
    else
        set astroload=($astroload $package)
    endif
  else if (-d $ASTROMAKE/opt/$package) then
    echo Package $package does not have a status, yet exists 
    if (-e $ASTROMAKE/rc/$package.csh) then
    	source $ASTROMAKE/rc/$package.csh
        if ($?a_version) then
            set astroload=($astroload ${package}_$a_version)
            set a_version=()
        else
            set astroload=($astroload $package)
        endif
    else
	echo No startup script $package.csh found
    endif
  else
    echo Package $package does not exist, try the command: astromake show or astromake versions
  endif
goto ploop



end:
